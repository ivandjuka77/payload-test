/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FCards".
 */
export type FCards =
  | {
      title: string;
      description: string;
      image: number | Media;
      links?:
        | {
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: 'default' | null;
            };
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    productCategories: ProductCategory;
    users: User;
    products: Product;
    industries: Industry;
    caseStudies: CaseStudy;
    services: Service;
    teamMembers: TeamMember;
    careers: Career;
    'product-documents': ProductDocument;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    productCategories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    industries: IndustriesSelect<false> | IndustriesSelect<true>;
    caseStudies: CaseStudiesSelect<false> | CaseStudiesSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    teamMembers: TeamMembersSelect<false> | TeamMembersSelect<true>;
    careers: CareersSelect<false> | CareersSelect<true>;
    'product-documents': ProductDocumentsSelect<false> | ProductDocumentsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'en' | 'sk' | 'jp';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'carousel' | 'simple' | 'backgroundImage' | 'backgroundImageCompact' | 'minimal' | 'backgroundVideo';
    title?: string | null;
    description?: string | null;
    cta?: {
      links?:
        | {
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    media?: (number | null) | Media;
    slides?:
      | {
          title: string;
          subtitle: string;
          backgroundImage: number | Media;
          badge: {
            text: string;
          };
          featuredItem: FItem;
          featuredCards?: FCards;
          cta?: {
            links?:
              | {
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?:
                      | ({
                          relationTo: 'pages';
                          value: number | Page;
                        } | null)
                      | ({
                          relationTo: 'posts';
                          value: number | Post;
                        } | null);
                    url?: string | null;
                    label: string;
                    /**
                     * Choose how the link should be rendered.
                     */
                    appearance?: ('default' | 'outline') | null;
                  };
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | FormBlock
    | QuickAccessBlock
    | ProductShowcaseBlock
    | CareerBlock
    | SustainabilityBlock
    | ContentImageBlock
    | IndustryShowcaseBlock
    | ShowcaseBlock
    | NewsBlock
    | ProductFilterBlock
    | VerticalCardsBlock
    | GridImageCardsBlock
    | CareersBlock
    | CertificationsBlock
    | TimelineBlock
    | TeamBlock
    | MapBlock
    | ProductTableBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  type: 'news' | 'research' | 'case-study';
  featured?: boolean | null;
  description: string;
  featuredImage: number | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  relatedProducts?: (number | Product)[] | null;
  relatedServices?: (number | Service)[] | null;
  industries?: (number | Industry)[] | null;
  relatedPosts?: (number | Post)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  author: number | User;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  isKeyProduct?: boolean | null;
  name: string;
  description: string;
  chemicalFamily?: (number | ProductCategory)[] | null;
  chemicalStructureImage: number | Media;
  technicalSpecifications: {
    chemicalName: string;
    casNumber: string;
    ecNumber?: string | null;
    synonyms?:
      | {
          synonym?: string | null;
          id?: string | null;
        }[]
      | null;
    molecularFormula: string;
    molecularWeight?: string | null;
    labVerified?: ('Verified' | 'Researched' | 'Not Confirmed') | null;
  };
  VupSpecifications?: {
    appearance?: string | null;
    purity?: string | null;
    acidValue?: string | null;
    hydroxylValue?: string | null;
    waterContent?: string | null;
    ashContent?: string | null;
    meltingPoint?: string | null;
    boilingPoint?: string | null;
    density?: string | null;
    solubility?: string | null;
  };
  applications?:
    | {
        application?: string | null;
        description?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  keyFeatures?:
    | {
        feature?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  caseStudies?: (number | CaseStudy)[] | null;
  relatedProducts?: (number | Product)[] | null;
  faq?:
    | {
        question?: string | null;
        answer?: string | null;
        id?: string | null;
      }[]
    | null;
  technicalDataSheets?: (number | null) | ProductDocument;
  safetyDataSheets?: (number | null) | ProductDocument;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: number;
  _order?: string | null;
  name: string;
  description: string;
  image: number | Media;
  slug?: string | null;
  slugLock?: boolean | null;
  featuredProducts?: (number | Product)[] | null;
  applications?:
    | {
        imageSrc?: (number | null) | Media;
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  productComparison?: boolean | null;
  parent?: (number | null) | ProductCategory;
  breadcrumbs?:
    | {
        doc?: (number | null) | ProductCategory;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "caseStudies".
 */
export interface CaseStudy {
  id: number;
  title: string;
  featured?: boolean | null;
  summary: string;
  featuredImage: number | Media;
  challenge: string;
  solution?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  results: string;
  industry: number | Industry;
  relatedProducts?: (number | Product)[] | null;
  relatedServices?: (number | Service)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries".
 */
export interface Industry {
  id: number;
  _order?: string | null;
  name: string;
  description: string;
  summary: string;
  featuredImage: number | Media;
  keyProducts?: (number | Product)[] | null;
  productCategories?: (number | ProductCategory)[] | null;
  services?: (number | Service)[] | null;
  challenges?:
    | {
        title: string;
        challenge: string;
        solution: string;
        image: number | Media;
        challengeLink?: string | null;
        relatedProducts?: (number | Product)[] | null;
        relatedServices?: (number | Service)[] | null;
        caseStudies?: (number | CaseStudy)[] | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  _order?: string | null;
  title: string;
  description: string;
  accreditations?:
    | {
        accreditation?: string | null;
        id?: string | null;
      }[]
    | null;
  featuredImage: number | Media;
  subServices?:
    | {
        title: string;
        description: string;
        image?: (number | null) | Media;
        displayItems?:
          | {
              item?: string | null;
              id?: string | null;
            }[]
          | null;
        features?:
          | {
              feature: string;
              description: string;
              id?: string | null;
            }[]
          | null;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        feature?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  team?: (number | TeamMember)[] | null;
  caseStudies?: (number | CaseStudy)[] | null;
  industries?: (number | Industry)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teamMembers".
 */
export interface TeamMember {
  id: number;
  name: string;
  role: string;
  bio?: string | null;
  image?: (number | null) | Media;
  /**
   * LinkedIn profile URL
   */
  linkedin?: string | null;
  email?: string | null;
  isHeadOfDepartment?: boolean | null;
  department?: (number | Service)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-documents".
 */
export interface ProductDocument {
  id: number;
  alt?: string | null;
  product?: (number | null) | Product;
  type?: ('tds' | 'sds') | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FItem".
 */
export interface FItem {
  title: string;
  description: string;
  image: number | Media;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: 'default' | null;
        };
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuickAccessBlock".
 */
export interface QuickAccessBlock {
  title: string;
  description: string;
  cards?:
    | {
        title: string;
        description: string;
        backgroundImage: number | Media;
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                label: string;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('default' | 'outline') | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'quickAccess';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcaseBlock".
 */
export interface ProductShowcaseBlock {
  title: string;
  description: string;
  products: {
    product: (number | Product)[];
    id?: string | null;
  }[];
  cta?: {
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'productShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareerBlock".
 */
export interface CareerBlock {
  title: string;
  subtitle: string;
  features: {
    title: string;
    content: string;
    id?: string | null;
  }[];
  cta?: {
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'career';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sustainabilityBlock".
 */
export interface SustainabilityBlock {
  title: string;
  subtitle?: string | null;
  image: number | Media;
  card: {
    title: string;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  features?:
    | {
        title: string;
        content: string;
        id?: string | null;
      }[]
    | null;
  cta?: {
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'sustainability';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentImageBlock".
 */
export interface ContentImageBlock {
  title?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: number | Media;
  layout?: ('left' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentImage';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IndustryShowcaseBlock".
 */
export interface IndustryShowcaseBlock {
  title: string;
  subtitle?: string | null;
  /**
   * Number of industries to display (1-10)
   */
  limit?: number | null;
  industries: (number | Industry)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'industryShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseBlock".
 */
export interface ShowcaseBlock {
  type: 'product' | 'content' | 'feature' | 'category';
  title: string;
  description: string;
  products?: (number | Product)[] | null;
  categories?: (number | ProductCategory)[] | null;
  contentItems?:
    | {
        content?: (number | Post)[] | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        title: string;
        description?: string | null;
        media?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  showCta?: boolean | null;
  cta?: {
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'showcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsBlock".
 */
export interface NewsBlock {
  title: string;
  description?: string | null;
  badge?: string | null;
  linkLabel?: string | null;
  items: (number | Post)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'news';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFilterBlock".
 */
export interface ProductFilterBlock {
  title?: string | null;
  description?: string | null;
  enabledFilters?: ('category' | 'industry' | 'application')[] | null;
  showCta?: boolean | null;
  cta?: {
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'productFilter';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VerticalCardsBlock".
 */
export interface VerticalCardsBlock {
  title?: string | null;
  subtitle?: string | null;
  cards?:
    | {
        image: number | Media;
        title: string;
        subtitle?: string | null;
        paragraph?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'verticalCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GridImageCardsBlock".
 */
export interface GridImageCardsBlock {
  badge?: string | null;
  title?: string | null;
  subtitle?: string | null;
  cards?:
    | {
        image: number | Media;
        title: string;
        paragraph?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        highlights?:
          | {
              highlight?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gridImageCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareersBlock".
 */
export interface CareersBlock {
  title: string;
  description: string;
  careers: (number | Career)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'careers';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers".
 */
export interface Career {
  id: number;
  title: string;
  /**
   * e.g. Engineering, Marketing, Sales, etc.
   */
  category: string;
  /**
   * City, Country or Remote
   */
  location: string;
  type: 'fulltime' | 'parttime' | 'intern' | 'contract';
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * List the key responsibilities for this role
   */
  keyResponsibilities: {
    responsibility?: string | null;
    id?: string | null;
  }[];
  /**
   * List the required qualifications and experience
   */
  requirements: {
    requirement?: string | null;
    id?: string | null;
  }[];
  /**
   * List any preferred but not required qualifications
   */
  preferredQualifications?:
    | {
        qualification?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * List any benefits offered with this position
   */
  benefits?:
    | {
        benefit?: string | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CertificationsBlock".
 */
export interface CertificationsBlock {
  title: string;
  subtitle: string;
  featuredCertification: {
    title: string;
    subtitle: string;
    description: string;
    articleLink: string;
    image: number | Media;
  };
  certifications?:
    | {
        title: string;
        subtitle: string;
        description: string;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'certifications';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlock".
 */
export interface TimelineBlock {
  badge: string;
  title: string;
  subtitle: string;
  items: {
    period: string;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    keyAchievements?:
      | {
          achievement?: string | null;
          id?: string | null;
        }[]
      | null;
    imageUrl: number | Media;
    highlight: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'timeline';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock".
 */
export interface TeamBlock {
  title?: string | null;
  subtitle?: string | null;
  teamMembers?: (number | TeamMember)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'team';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MapBlock".
 */
export interface MapBlock {
  title: string;
  description: string;
  /**
   * Enter the Google Maps embed URL
   */
  iframeUrl: string;
  /**
   * Upload an image to display alongside the map
   */
  image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'map';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductTableBlock".
 */
export interface ProductTableBlock {
  title: string;
  description?: string | null;
  products: {
    product: number | Product;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'productTable';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'products';
        value: number | Product;
      }
    | {
        relationTo: 'productCategories';
        value: number | ProductCategory;
      }
    | {
        relationTo: 'industries';
        value: number | Industry;
      }
    | {
        relationTo: 'services';
        value: number | Service;
      }
    | {
        relationTo: 'careers';
        value: number | Career;
      };
  slug?: string | null;
  description?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'productCategories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'industries';
        value: number | Industry;
      } | null)
    | ({
        relationTo: 'caseStudies';
        value: number | CaseStudy;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'teamMembers';
        value: number | TeamMember;
      } | null)
    | ({
        relationTo: 'careers';
        value: number | Career;
      } | null)
    | ({
        relationTo: 'product-documents';
        value: number | ProductDocument;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        title?: T;
        description?: T;
        cta?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        media?: T;
        slides?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundImage?: T;
              badge?:
                | T
                | {
                    text?: T;
                  };
              featuredItem?: T | FItemSelect<T>;
              featuredCards?: T | FCardsSelect<T>;
              cta?:
                | T
                | {
                    links?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                label?: T;
                                appearance?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        quickAccess?: T | QuickAccessBlockSelect<T>;
        productShowcase?: T | ProductShowcaseBlockSelect<T>;
        career?: T | CareerBlockSelect<T>;
        sustainability?: T | SustainabilityBlockSelect<T>;
        contentImage?: T | ContentImageBlockSelect<T>;
        industryShowcase?: T | IndustryShowcaseBlockSelect<T>;
        showcase?: T | ShowcaseBlockSelect<T>;
        news?: T | NewsBlockSelect<T>;
        productFilter?: T | ProductFilterBlockSelect<T>;
        verticalCards?: T | VerticalCardsBlockSelect<T>;
        gridImageCards?: T | GridImageCardsBlockSelect<T>;
        careers?: T | CareersBlockSelect<T>;
        certifications?: T | CertificationsBlockSelect<T>;
        timeline?: T | TimelineBlockSelect<T>;
        team?: T | TeamBlockSelect<T>;
        map?: T | MapBlockSelect<T>;
        productTable?: T | ProductTableBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FItem_select".
 */
export interface FItemSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FCards_select".
 */
export interface FCardsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuickAccessBlock_select".
 */
export interface QuickAccessBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  cards?:
    | T
    | {
        title?: T;
        description?: T;
        backgroundImage?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcaseBlock_select".
 */
export interface ProductShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  products?:
    | T
    | {
        product?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareerBlock_select".
 */
export interface CareerBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  features?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sustainabilityBlock_select".
 */
export interface SustainabilityBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  image?: T;
  card?:
    | T
    | {
        title?: T;
        description?: T;
      };
  features?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentImageBlock_select".
 */
export interface ContentImageBlockSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  image?: T;
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IndustryShowcaseBlock_select".
 */
export interface IndustryShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  limit?: T;
  industries?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseBlock_select".
 */
export interface ShowcaseBlockSelect<T extends boolean = true> {
  type?: T;
  title?: T;
  description?: T;
  products?: T;
  categories?: T;
  contentItems?:
    | T
    | {
        content?: T;
        id?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        media?: T;
        id?: T;
      };
  showCta?: T;
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsBlock_select".
 */
export interface NewsBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  badge?: T;
  linkLabel?: T;
  items?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFilterBlock_select".
 */
export interface ProductFilterBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  enabledFilters?: T;
  showCta?: T;
  cta?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VerticalCardsBlock_select".
 */
export interface VerticalCardsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  cards?:
    | T
    | {
        image?: T;
        title?: T;
        subtitle?: T;
        paragraph?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GridImageCardsBlock_select".
 */
export interface GridImageCardsBlockSelect<T extends boolean = true> {
  badge?: T;
  title?: T;
  subtitle?: T;
  cards?:
    | T
    | {
        image?: T;
        title?: T;
        paragraph?: T;
        highlights?:
          | T
          | {
              highlight?: T;
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareersBlock_select".
 */
export interface CareersBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  careers?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CertificationsBlock_select".
 */
export interface CertificationsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  featuredCertification?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        articleLink?: T;
        image?: T;
      };
  certifications?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlock_select".
 */
export interface TimelineBlockSelect<T extends boolean = true> {
  badge?: T;
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        period?: T;
        content?: T;
        keyAchievements?:
          | T
          | {
              achievement?: T;
              id?: T;
            };
        imageUrl?: T;
        highlight?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock_select".
 */
export interface TeamBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  teamMembers?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MapBlock_select".
 */
export interface MapBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  iframeUrl?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductTableBlock_select".
 */
export interface ProductTableBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  products?:
    | T
    | {
        product?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  featured?: T;
  description?: T;
  featuredImage?: T;
  content?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  relatedProducts?: T;
  relatedServices?: T;
  industries?: T;
  relatedPosts?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  author?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  _order?: T;
  name?: T;
  description?: T;
  image?: T;
  slug?: T;
  slugLock?: T;
  featuredProducts?: T;
  applications?:
    | T
    | {
        imageSrc?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  productComparison?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  isKeyProduct?: T;
  name?: T;
  description?: T;
  chemicalFamily?: T;
  chemicalStructureImage?: T;
  technicalSpecifications?:
    | T
    | {
        chemicalName?: T;
        casNumber?: T;
        ecNumber?: T;
        synonyms?:
          | T
          | {
              synonym?: T;
              id?: T;
            };
        molecularFormula?: T;
        molecularWeight?: T;
        labVerified?: T;
      };
  VupSpecifications?:
    | T
    | {
        appearance?: T;
        purity?: T;
        acidValue?: T;
        hydroxylValue?: T;
        waterContent?: T;
        ashContent?: T;
        meltingPoint?: T;
        boilingPoint?: T;
        density?: T;
        solubility?: T;
      };
  applications?:
    | T
    | {
        application?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  keyFeatures?:
    | T
    | {
        feature?: T;
        description?: T;
        id?: T;
      };
  caseStudies?: T;
  relatedProducts?: T;
  faq?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  technicalDataSheets?: T;
  safetyDataSheets?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "industries_select".
 */
export interface IndustriesSelect<T extends boolean = true> {
  _order?: T;
  name?: T;
  description?: T;
  summary?: T;
  featuredImage?: T;
  keyProducts?: T;
  productCategories?: T;
  services?: T;
  challenges?:
    | T
    | {
        title?: T;
        challenge?: T;
        solution?: T;
        image?: T;
        challengeLink?: T;
        relatedProducts?: T;
        relatedServices?: T;
        caseStudies?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "caseStudies_select".
 */
export interface CaseStudiesSelect<T extends boolean = true> {
  title?: T;
  featured?: T;
  summary?: T;
  featuredImage?: T;
  challenge?: T;
  solution?: T;
  results?: T;
  industry?: T;
  relatedProducts?: T;
  relatedServices?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  _order?: T;
  title?: T;
  description?: T;
  accreditations?:
    | T
    | {
        accreditation?: T;
        id?: T;
      };
  featuredImage?: T;
  subServices?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        displayItems?:
          | T
          | {
              item?: T;
              id?: T;
            };
        features?:
          | T
          | {
              feature?: T;
              description?: T;
              id?: T;
            };
        link?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        description?: T;
        id?: T;
      };
  team?: T;
  caseStudies?: T;
  industries?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teamMembers_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  bio?: T;
  image?: T;
  linkedin?: T;
  email?: T;
  isHeadOfDepartment?: T;
  department?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "careers_select".
 */
export interface CareersSelect<T extends boolean = true> {
  title?: T;
  category?: T;
  location?: T;
  type?: T;
  description?: T;
  keyResponsibilities?:
    | T
    | {
        responsibility?: T;
        id?: T;
      };
  requirements?:
    | T
    | {
        requirement?: T;
        id?: T;
      };
  preferredQualifications?:
    | T
    | {
        qualification?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        benefit?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-documents_select".
 */
export interface ProductDocumentsSelect<T extends boolean = true> {
  alt?: T;
  product?: T;
  type?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  description?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  linkGroups?:
    | {
        groupTitle: string;
        navItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  companyInfo?: {
    address?: string | null;
    email?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  linkGroups?:
    | T
    | {
        groupTitle?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  companyInfo?:
    | T
    | {
        address?: T;
        email?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null)
      | ({
          relationTo: 'caseStudies';
          value: number | CaseStudy;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}